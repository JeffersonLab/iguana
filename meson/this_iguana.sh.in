#!/usr/bin/env bash
# `source` this file to set environment variables relevant for this `iguana` installation

# parse arguments
arg_verbose=false
arg_allow_deps=true
arg_githubCI=false
for arg in "$@"; do
  case $arg in
    --verbose) arg_verbose=true ;;
    --no-deps) arg_allow_deps=false ;;
    --githubCI) arg_githubCI=true ;;
    --help|-h)
      echo "USAGE: source ${BASH_SOURCE[0]:-$0} [OPTIONS]..." >&2
      echo """
      OPTIONS:

        --verbose     print what variables are set
        --no-deps     do not include dependencies in path-type variables
        --githubCI    set environment for GitHub CI
      """ >&2
      unset arg
      unset arg_verbose
      unset arg_allow_deps
      unset arg_githubCI
      return 2
      ;;
    source*|.*) # handle callers which cause `$1` to be 'source this_iguana.sh' or '. this_iguana.sh'
      ;;
    *)
      echo "ERROR: unknown option '$arg'" >&2
      unset arg
      unset arg_verbose
      unset arg_allow_deps
      unset arg_githubCI
      return 1
      ;;
  esac
done
unset arg

# set IGUANA prefix; use `cd && pwd` to support older macOS versions
export IGUANA=$(cd $(dirname ${BASH_SOURCE[0]:-$0})/.. && pwd -P)

# if allowing dependencies in the environment, prepend their paths
## FIXME: this won't work well if a user already has all dependency libraries
## in, for example, `/opt/lib`, but has custom built and installed one
## elsewhere, e.g., `/tmp/lib`; if `/opt/lib` is listed before `/tmp/lib` in
## `$LD_LIBRARY_PATH`, the `/opt/lib` library will be used at runtime rather
## than the one at `/tmp/lib` (cf. FIXME in ../meson.build)
if $arg_allow_deps; then
  export PKG_CONFIG_PATH=@dep_pkgconfigdirs@${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}
  export @ld_path@=@dep_libdirs@${@ld_path@:+:${@ld_path@}}
  if @root@; then
    export ROOT_INCLUDE_PATH=@dep_includedirs@${ROOT_INCLUDE_PATH:+:${ROOT_INCLUDE_PATH}}
  fi
fi

# prepend paths with iguana
export PKG_CONFIG_PATH=$IGUANA/@libdir@/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}
export PATH=$IGUANA/@bindir@${PATH:+:${PATH}}
export @ld_path@=$IGUANA/@libdir@${@ld_path@:+:${@ld_path@}}
if @python@; then
  export PYTHONPATH=$IGUANA/@pythondir@${PYTHONPATH:+:${PYTHONPATH}}
fi
if @root@; then
  export ROOT_INCLUDE_PATH=$IGUANA/@includedir@${ROOT_INCLUDE_PATH:+:${ROOT_INCLUDE_PATH}}
fi

# set config file path
export IGUANA_CONFIG_PATH=$IGUANA/@etcdir@

# print environment variables
if $arg_verbose; then
  print_var() { echo "$@" | sed 's/:/\n  /g'; }
  echo """
Iguana Environment Variables
----------------------------

IGUANA -- SET
  $IGUANA

PKG_CONFIG_PATH -- ADDED iguana and dependency pkg-config paths:
  $(print_var ${PKG_CONFIG_PATH-})

PATH -- ADDED iguana executables:
  $(print_var ${PATH-})

@ld_path@ -- ADDED iguana and dependency library paths:
  $(print_var ${@ld_path@-})

ROOT_INCLUDE_PATH -- $(if @root@; then echo 'ADDED iguana and dependency include paths:'; else echo 'has NOT been changed, since not built with ROOT support'; fi)
  $(print_var ${ROOT_INCLUDE_PATH-})

PYTHONPATH -- $(if @python@; then echo 'ADDED iguana python bindings:'; else echo 'has NOT been changed, since not built with Python support'; fi)
  $(print_var ${PYTHONPATH-})

IGUANA_CONFIG_PATH -- SET to iguana algorithms' default configuration directory
  $(print_var ${IGUANA_CONFIG_PATH-})

----------------------------
"""
  unset -f print_var
fi

# export variables for GitHub CI environment
if $arg_githubCI; then
  echo PKG_CONFIG_PATH=$PKG_CONFIG_PATH >> $GITHUB_ENV
  echo PATH=$PATH >> $GITHUB_ENV
  echo @ld_path@=$@ld_path@ >> $GITHUB_ENV
  echo IGUANA_CONFIG_PATH=$IGUANA_CONFIG_PATH >> $GITHUB_ENV
  if @python@; then
    echo PYTHONPATH=$PYTHONPATH >> $GITHUB_ENV
  fi
  if @root@; then
    echo ROOT_INCLUDE_PATH=$ROOT_INCLUDE_PATH >> $GITHUB_ENV
  fi
fi

# cleanup
unset arg_verbose
unset arg_allow_deps
unset arg_githubCI
